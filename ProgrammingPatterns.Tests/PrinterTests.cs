using Programming_Patterns.Builder.Models;
using Programming_Patterns.Builder.Enums;
using Programming_Patterns.Shared;

namespace ProgrammingPatterns.Tests
{
    [Trait("Category", "Shared")]
    public class PrinterTests
    {
        [Fact]
        public void ToString_WhenCalled_MakesSense()
        {
            // Arrange
            var decimalWeigh = 11.2m;
            decimal paddedWeigh = Math.Ceiling(decimalWeigh);

            // Act
            var testObj = new Box(size: BoxSize.Large)
            {
                WeightOfContents = decimalWeigh
            };
            string result = testObj.ToString();

            // Assert
            Assert.Contains(expectedSubstring: paddedWeigh.ToString(), actualString: result);
        }
    }

    internal class TestType
    {
        [Printable("Name")]
        public string Name { get; set; }

        [Printable("Age")]
        public int Age { get; set; }

        public TestType(string name)
        {
            Name = name;
            Age = new Random().Next(0, 100);
        }

        override public string ToString() =>
            new DataClassPrinter<TestType>(this, "TestType").AutoGenerateDescription();
    }
}
